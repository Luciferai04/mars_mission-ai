user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=vision_limit:10m rate=5r/s;

    # Upstream services
    upstream planning_service {
        least_conn;
        server planning-service:8001 max_fails=3 fail_timeout=30s;
    }

    upstream vision_service {
        least_conn;
        server vision-service:8002 max_fails=3 fail_timeout=30s;
    }

    upstream marl_service {
        least_conn;
        server marl-service:8003 max_fails=3 fail_timeout=30s;
    }

    upstream data_service {
        least_conn;
        server data-service:8004 max_fails=3 fail_timeout=30s;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"api-gateway"}';
            add_header Content-Type application/json;
        }

        # Planning Service routes
        location /api/v1/planning/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://planning_service/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Vision Service routes
        location /api/v1/vision/ {
            limit_req zone=vision_limit burst=10 nodelay;
            
            proxy_pass http://vision_service/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Longer timeouts for image processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Increased body size for image uploads
            client_max_body_size 50M;
        }

        # MARL Service routes
        location /api/v1/marl/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://marl_service/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Data Service routes
        location /api/v1/data/ {
            limit_req zone=api_limit burst=30 nodelay;
            
            proxy_pass http://data_service/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Allow larger uploads for DEM files
            client_max_body_size 500M;
        }

        # Legacy routes (backward compatibility)
        location ~ ^/(plan|health|traverse) {
            proxy_pass http://planning_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Static files for documentation
        location /docs {
            proxy_pass http://planning_service/docs;
            proxy_set_header Host $host;
        }

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            return 503 '{"error":"Service temporarily unavailable"}';
            add_header Content-Type application/json;
        }

        error_page 404 /404.html;
        location = /404.html {
            return 404 '{"error":"Not found"}';
            add_header Content-Type application/json;
        }
    }
}
